{
    "compile_errors": [],
    "decls": {
        "let contract_stream": [{
        	id Int64,
        	customer_id Int64,
        	timestamp Timestamp(
            Microsecond,
            None,
        ),
        	activity Utf8,
        	revenue_impact Float64,
        	plan_type Utf8,
        	activity_occurrence Int64,
        	activity_repeated_at Timestamp(
            Microsecond,
            None,
        ),
        }],
        "let cte_final": [{
        	metric_model Utf8,
        	is_snapshot_reliant_metric Boolean,
        	anchor_date Utf8,
        	date_grain Utf8,
        	metric_date Date32,
        	slice_object Utf8,
        	slice_dimension Utf8,
        	slice_value Utf8,
        	metric_calculation Utf8,
        	metric_value Float64,
        }],
        "let cte_grouping_sets": [{
        	metric_month Date32,
        	month_bit Int64,
        	metric_day Date32,
        	day_bit Int64,
        	combination_segment Utf8,
        	segment_bit Int64,
        	combination_channel Utf8,
        	channel_bit Int64,
        	combination_plan_type Utf8,
        	plan_type_bit Int64,
        	total_object Utf8,
        	total_bit Int64,
        	metric_calculation Utf8,
        	metric_value SumAgg<Float64>,
        }],
        "let cte_prep": [{
        	customer_id Int64,
        	segment Utf8,
        	channel Utf8,
        	cohort Utf8,
        	timestamp Timestamp(
            Microsecond,
            None,
        ),
        	revenue_impact Float64,
        	activity Utf8,
        	plan_type Utf8,
        }],
        "let date_slices": [Utf8],
        "let dim_customer": [{
        	id Int64,
        	segment Utf8,
        	channel Utf8,
        	first_contract_signed_date Timestamp(
            Microsecond,
            None,
        ),
        	cohort Utf8,
        }],
        "let metric_slices": [Utf8],
    },
    "queries": [
        Ok(
            TypedValue {
                type_: List(
                    Record(
                        [
                            Field {
                                name: "COUNT(*)",
                                type_: Atom(
                                    Int64,
                                ),
                                nullable: true,
                            },
                        ],
                    ),
                ),
                value: "| COUNT(*) |\n|----------|\n| 272      |",
            },
        ),
        Ok(
            TypedValue {
                type_: List(
                    Record(
                        [
                            Field {
                                name: "count(*)",
                                type_: Atom(
                                    Int64,
                                ),
                                nullable: true,
                            },
                        ],
                    ),
                ),
                value: "| count(*) |\n|----------|\n| 272      |",
            },
        ),
    ],
}